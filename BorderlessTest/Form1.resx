<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZZogPqISfVayGo42shqKHqXqbXJ12
        iQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRtkg6ui6egvqzC29HV5P3b6vb/3Or2/9PZ
        5/2zlbDbpneUKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKaAmSi1m7TT2uby/97v+v/e7/r/xbbJ/8iw
        w//Ftcn/3ez4/66NqbcAAAAAAAAAAAAAAAAAAAAAAAAAAKVphxG5nrbh1t7t/9fg7v/e7/r/3u/6/8qz
        xf//////yrPF/97v+v+1mLHIAAAAAAAAAAAAAAAAAAAAAAAAAAC6nbXF3Nzp/6iKrP+oiqz/1+Du/97v
        +v/Ftsn/zLXH/8W1yf/Z5PH/rIekpgAAAAAAAAAAAAAAAAAAAACfcI8QyrbK+Nzi7/+oiqz/qIqs/9fg
        7v/S1+b/3u/6/97v+v/e7vr/sI6q1Z12iQ0AAAAAAAAAAAAAAAAAAAAAtJGtbd/c6f/f7/r/1+Du/9fg
        7v/NzN3/zcrb/97v+v/e7/r/1t/t/6qEoY0AAAAAAAAAAAAAAAAAAAAAAAAAALicsqzo7Pj/t6vE/7es
        w//d7fn/0NLi/9vp9f/e7/r/3u/6/93u+f+wjqrXqYGdU6BujDOhbY0xmWaZCgAAAAC3mrGu2tbk/6q5
        0/+qutL/0dXl/8/Q4P/b6vb/3u/6/97v+v/e7/r/09fn/9DT4v/NzN3/zMrc/LGQq9GddokNtZSudeDc
        6v+3q8T/t6zD/93t+f/OzN3/zszd/97v+v/e7/r/2OHw/9HU5P/e7/r/3u/6/97v+v/Nzd3+oG6NQ6Vp
        hxHJtsr64/L7/93s9//Iucn/1NXk/9Tb6f/Pz9//vKi//87P3//Q0eT/v7DN/93s9//e7/r/vKnA3p5t
        khUAAAAAuZuzzenu+f/GtsX/6cmy/8Gdqf/e7/r/1+Du/9fg7v/e7/r/poK1/5p32/+9rcv/2+n1/62H
        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
        zf+kgqT/xbvP/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/87O3v+gcZH3n22NOAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACebIxHsIml/PD3///k8fz/2ufz/6V7
        mv+kgqT/pYKl/6Z8mv/a5/P/3u/6/8rE1//Fu8//3u/6/97v+v/e7/r/3u/6/97v+v/d7Pf/pHaV9p9s
        jFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKd5maDGr8T/8Pb//97w
        +v/e7/r/2ufz/8W7z//Fu8//2ufz/97v+v/e7/r/1t/t/6mBnv/e7/r/3u/6/97v+v/e7/r/3u/6/8/Q
        4P+hc5PlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqH2b4NrS
        4f/r9f7/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/0dPj/6d9m//R0+P/3u/6/97v+v/e7/r/3u/6/97v
        +v/e7/r/z9Dg/6N0k+MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACkdZX35+fy/+jz/f/a5/P/xbvP/8W7z//a5/P/3u/6/97v+v/e7/r/zcvc/9LW5f/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/c6vb/o3aV96FrjlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKFvj/3p7Pb/4+v2/6Z9nP+mlrL/ppWy/6Z+nP/a5/P/3u/6/8S5zf/Euc3/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/P0OD/o3OT9qFzkbOhbo99n2uNd59rjXefa413n2yOapxu
        iywAAAAAAAAAAAAAAAAAAAAAoG+Q/e3x+v/KvdD/ppa0/67j+f+u4/n/ppaz/8W6zv/e7/r/wrTJ/8K1
        yf/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/Z5vL/xbrO/72rwv+9qsD/varA/72q
        wP+4nrf6onSU9aFykYAAAAAAAAAAAAAAAACleZj15ubx/8y90P+mlrP/ruP5/67j+f+mlrL/xbvP/97v
        +v/e7/r/zcvc/9PY5//e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/t563/9fh7v/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/X4e7/pHWV9p9qjDUAAAAAAAAAAKyEoNzZ0N//5+33/6Z9nP+mlrL/p5Wy/6Z+
        nP/a5/P/3u/6/9HT4/+nfZv/0dPj/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/9fh7/+of53/3e35/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v+9qcL9oW+ShQAAAAAAAAAAq4GdpMq2yv/w9v//2+jz/8W7
        z//Fu8//2ufz/97v+v/e7/r/3u/6/97v+v/W3+3/qoOg/97v+v/e7/r/3u/6/97v+v/NzN3/1+Hv/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/72rwf6gb5CPAAAAAAAAAACicI9Cr4mk/vD3
        ///l8vz/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/8rF2P/Eus7/2+n1/72qwv+7pr7/rYil/6qD
        oP/T2uj/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/3u/6/97v+v/e7/r/qYKe8J9tjk0AAAAAAAAAAP8A
        /wGmeJf24+Ht/+z2/v/e7/r/3u/6/9fh7v+vi6X/oW6P/7CLpf/X4e//3u/6/97v+v/c6vb/wrXK/8S5
        zf/Pz9//3u76/97v+v/X4e7/q4an/59tkP+shqf/1+Hv/97v+v/e7/r/3u/6/9Pa6P+hcJDxmWaZBQAA
        AAAAAAAAAAAAAKl9nIm7nLb/8Pf//+Xy/P/e7/r/sY2m/8+rp//227r/zqmm/7KOpv/e7/r/3u/6/97v
        +v/e7/r/3u/6/97v+v/e7/r/3u/6/6yIqf+cdcH/mXjq/5x0wP+tian/3u/6/97v+v/e7/r/s5ew9qJv
        kIMAAAAAAAAAAAAAAAAAAAAAn2CACKZ5mPTf2uf/7vf//+Dw+/+jcpD/9Nm5//neu//02bj/o3KR/97v
        +v/e7/r/2ufz/8W7z//Fu8//2ufz/97v+v/e7/r/oXCR/5l36f+ZeO3/mXjo/6Fvkv/e7/r/3u/6/9HU
        5P+hcJHvnXaJDQAAAAAAAAAAAAAAAAAAAAAAAAAAqHqXWKuCn/3r7vj/7fX+/7CMpf/Pq6f/89a4/86p
        pv+xjaf/3u/6/9rn8/+mfJf/po6I/6aNif+nfZf/2ufz/97v+v+rh6j/nHXB/5p35v+cdMD/rIip/97v
        +v/b6PT/pnmZ9J9tjFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq4Oho7WRq/7u9P3/4uPu/7CL
        pf+kdJP/sIul/9Xd7P/e7/r/xLrO/6aPif+vynL/r8py/6eOif/Fus7/3u/6/9bd6/+rhqf/oXGU/6yG
        p//V3ez/3Or2/6+MqPKhc5KbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIACqn6dxbSQ
        q/7r7vf/7/f//+Xy/P/e7/r/3u/6/97v+v/Fus7/p4+J/6/Kcv+vynL/po6J/8W7z//e7/r/3u/6/97v
        +v/k8fz/7PX+/+nv+P+xjqr4o3OSqapVqgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgIACq4GeoKqAnf3e2eb/8Pf//+z2/v/l8vz/3+/6/9rn8/+mfJf/po6J/6eOiv+nfZf/2ufz/9/w
        +v/k8vz/7PX+//D3///c1eP/qn6c+6h8mpiAgIACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApnuYWad5l/W6m7P/4t7r//D3///v9///7Pb+/+Ts9v/LvtD/y77R/+Ts
        9v/s9v7/7/f///D3///h3en/vaC3/qR3lfWhbY9EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqnGOCal8m4yldpb3rYah/cq2yf/Zz9//5uXw/+/2
        /v/r7vf/5ubx/93X5f/Iscb/r4ik/KZ5mPGmdpR1pG2SDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKpVqgOgbY5GqoCcrauB
        nuCld5X2o3OT+6Jzk/qjcpL5qX6c4ad4mY6daow8gICAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////8A///4AD//8AAf/8AAH/+AAA//AAAP/wAAD/4AAB/8AA
        Af/AAAP/wAAH/4AAB/+AAAf/gAAH/4AAAf+AAAADgAAAA4AAAAGAAAABwAAAA8AAAAPAAAAD4AAAB/AA
        AA/wAAAP+AAAH/wAAD//AAD//4AD///wD///////
</value>
  </data>
</root>